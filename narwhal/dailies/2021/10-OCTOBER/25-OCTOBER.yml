################################################
------------------------------------------------
------------------------------------------------
------------------------------------------------
-----------     October 2021       -------------
----------- Su  Mo  Tu We Th Fr Sa -------------
-----------                   1  2 -------------
-----------  3  4   5  6  7  8  9 -------------
----------- 10  11  12 13 14 15 16 -------------
----------- 17  18  19 20 21 22 23 -------------
----------- 24 *25* 26 27 28 29 30 -------------
----------- 31                     -------------
------------------------------------------------
------------------------------------------------
------------------------------------------------
################################################

#####################################
#####################################	  
###### MONDAY--25-OCT-2021 ##########
#####################################
#####################################

09:15
TC:
start a gitlab dev using gitlab PROD data 
AC: 
possible documentation
    gcp-iac
      apps
	gitlab
	  README.md


hits-devops-toolinggitlab
context
  workloads
many different deployments
backups are version spe

OBS:
prod backup -> dev
  prod backup is in prod bucket

  backup file name:
    hits-devops-tooling-gitlab-prod-backups/1635123705_2021_10_25_14.3.2-ee_gitlab_backup.tar
  url:
    https://storage.cloud.google.com/hits-devops-tooling-gitlab-prod-backups/1635123705_2021_10_25_14.3.2-ee_gitlab_backup.tar
  uri:
    gs://hits-devops-tooling-gitlab-prod-backups/1635123705_2021_10_25_14.3.2-ee_gitlab_backup.tar

Setu p complete
NS:
Restore
gitlab README

$ k get no
  gke-dev-tooling-dev-tooling-node-pool-cc71260a-47st   Ready    <none>   13d   v1.22.1-gke.1602
  gke-dev-tooling-dev-tooling-node-pool-cc71260a-nynl   Ready    <none>   13d   v1.22.1-gke.1602


10:50
OBS: 
dev cluster is on gkev 1.22
NS:
  - delete dev node
  - spin up a new dev node on 1.21 (conan)
  - restore the prod backup on dev

11:50
OBS:
  - compute terraform app needs a new default setting
      workload_metadata_config {
        - mode          = "GKE_METADATA"

LUNCH
13:10
NS:
  test configuration 
code window

- modifying 
    git/devops/terraform-generic-modules/gke/
      main.tf
      variables.tf
14:15
TC:


get in to context
get out of context

"deep work"

#####################################
#####################################	  
###### TUESDAY--26-OCT-2021 #########
#####################################
#####################################
 export FILE_NAME=gs://hits-devops-tooling-gitlab-prod-backups/1635123705_2021_10_25_14.3.2-ee_gitlab_backup.tar
 export DEST=gs://hits-devops-tooling-gitlab-dev-backups/
 gsutil cp $FILE_NAME $DEST

gcloud container clusters get-credentials $CURR_ENV-tooling --zone us-central1-a --project hits-devops-tooling
k get no
gcloud container clusters delete dev-tooling --project hits-devops-tooling --zone us-central1-a
k get no
gcloud projects list
gcloud projects list|awk '{print $1}'
gcloud projects list|awk '{print $1}'|grep -v PROJECT_ID
for i in `gcloud projects list|awk '{print $1}'|grep -v PROJECT_ID`; do gcloud config set project $i; gcloud container clusters list; done
#####################################
#####################################	  
###### WEDNESDAY--27-OCT-2021 #######
#####################################
#####################################

gitlabe recovery
jira-2-0

Sam
James sent a message 
weird kubernetes runner error

disk "wierd"
status unscheduler one nodes had taint i/o disk pressure the pod didn't tolerate

code climate.yml
  plugins 
    study code
      which rules?
      tweeking rules

sonar-java
  altering individual rules perameters from the sonar plugin
  sasd -- static applicats security
Bruce wrote a snapshot pruner

****
****
**** OPEN ENROLLMENT  
****
****

TC: 
  Gitlab dev up and running
AC:
  



#####################################
#####################################	  
###### THURSDAY--28-OCT-2021 ########
#####################################
#####################################

*LUNCH*
TC:
  Push containers images to container registry with standard Prod config
AC:
  Push is possible ONLY with ONE pod present
OBS:

NS:
  Reproduce the failure while tialing logs on both pods


*SCRATCH
Oct 28, 2021, 11:16:21 AM 
 gitlab-registry-6b49fd9866-nlvrl 
ehBWR3GyDF86C_rPnpoY
sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain <certificate>:wq
13:31
AC:
  TWO PODS present
NS:
  run docker push/watch logs





#####################################
#####################################	  
###### FRIDAY--29-OCT-2021 ##########
#####################################
#####################################
****   We came upon a problem pushing container images to a registry in GKE. Our registry has 2 pods:
****    - gitlab-registry-xxxxxxx1
****    - gitlab-registry-xxxxxxx2
****  
****    We get this output
****  ```
****  docker push <our-gitlab-registry-url>/nginx
****  Using default tag: latest
****  The push refers to repository [<our-gitlab-registry-url>/nginx]
****  99xxxxf6e: Layer already exists
****  f7xxxx07643: Layer already exists
****  f8xxxxxxxef: Pushing [==================================================>]  4.096kB
****  78xxxxxx186: Layer already exists
****  43xxxxxxxx4: Retrying in 5 seconds
****  e81xxxxxxdb: Pushing [>                                                  ]  525.3kB/69.25MB
****  unknown blob
****  ```
****   We get these errors in the logs
****  ```
****  "error":"blob upload unknown"
****  "error","msg":"error resolving upload"
****  ```
****    Not much to sink our teeth into. INTERESTINGLY, when we remove the second pod (making the registry ONLY one pod) the docker push works no problem. After a day of research, we have gone down MANY rabbit holes. Any thoughts?









:wq

